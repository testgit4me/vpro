What is it? ????? ?? ?????? ? ????? ?????????????
? ?????????????? 2-3 ???? ?? ???? ????

What is containers?
Container is tool , technology which allows to run processes on an isolated environment using kernel of host OS.

lets say we have tomcat, nginx servers and we can  isolate these services using VMs, tomcat -> VM, nginx -> VM, 

VM needs OS, licences, big in size not convient for shipment and deployment, support, maintance, expensive, 

to provide high availablity need multiple VMs, so needs additional financial resources

let's imagine that we have munltiple processes running in the same OS but isolated, like VMs which has its own IP/Port numbers, directories but without OSs, this is container.
a container is process running isolated in directory with its own namespce, cgroup, with neccesary bin/lib files in this directory
we can treat a container as standard unit of software that packges up code, its depencies but without OS. one of the benefits of contaianers that it has not OS, so its light weght they just processes, so it is easy for shipment and deployment.

Docker 
- actually manages our containers
- we can call it container run time environment
- we can run containers very easy using docker engine
- actually is name of company who developed docker engine that allows very easy manage containers, Docker engine, it is docker run time environment, docker open source project

Docker is a popular open source containerization tool used to provide a portable and consistent runtime environment for software applications, while consuming less resources than a traditional server or virtual machine. 
Docker uses containers, isolated user-space environments that run at the operating system level and share system resources such as the kernel and the filesystem.

PAAS - platform as service, is like beanstalk, we just upload our artifact and run up the service/application.

Docker engine - it is a service, deamon running on OS, we can it using rest API or docker cli.

Docker is popular becouse of its images. in its repositoty, available 1000 of images that we can use in our projects or use by custimizing them. we can simply pull the image and run the containers. 

we can connect volumes to save or preserve the data out of the containers. it allows to create many containers without lose of data.

windows or linux, as the process running on container uses host OS kernel, we only can run windows containers on windows OS as the process needs windows kernel, linux containers on linux OSs as it also need linux kernel to be run.

what is OS kernel?
- confuses with bios, OS
- interacts software applicatinon with hardware/hardware components like cpu, memory, usb and others
- between user applicaiton and hardware

what os namespace && cgroup? Какие системы подсистемы ядра люникс использует докер при своей работе?
1) namespace: механизм ядро люникса к-й обеспечивает изоляцию процессов друг от друга (изолирует процессы друг от друга)
2) Cgroup - механизм ядро люникса к-й ограничивает, изолирует вычислительные ресурсы для групп процессов (ограничивает, изулировает вычислительные ресурсы для групп процессов)
Ресурсы процессорные, сетевые, память, ресурсы ввода и вывода

What's Docker images?
Image is actually the File System Snaption, actually this is stopped container, it is an archive
consists of multiple layers, each layer will be some data, 
when you building your own image, lets say we install package, some appl, git, it will create a layer, create directory is an other layer, so all the layers will be on read only mode
containers run from the image, directly connected to it, cannot remove image once its container running
Images are called as repositories in registries
tomcat images are called as tomcat repositories in registry, 
docker hub is regitry, 
images becomes containers when we run them on docekr engine
docker pull, docker run

We can build our customized images using docker files,
to build images we need to create Dockerfile, 
in this file we provide instructions how to build images, what port to expose, what packeges should be installed, volumes, 

Docker file conatins its own commands instaructions
- from - we specufy base images for example ubuntu, centos or other images form docker hub
- labels - we can give inf about project name, author name
- RUN - makes changes, when we need to install packeges, create directory, files or execute any other commands we use RUN
- ADD/COPY - they adds/copies files like conf files or archives from host machine into the image. 
the diference is COPY just take the files and dump it. for ADD instructions we can give a link and it download and put in image or unarchive if it is an archive file.
- CMD - gives an instruction which binary/commands showld be executed we do docker run
- ENTRY POINT -  similar to CMD, but more priority, if we use both of them in docker file, we can mention command on entrypoint and argument to this command in CMD.
- VOLUME - we indicate which volume we want to export from container and mount to directory in host machine, example apache make volume for /var/www/html. Volume/Bind mount 
- EXPOSE - when we mention binaries in CMD and it starts process, this process could be binding to specific port namber (nginx 80, mysql 3306) so what ever the port the process is binding to, we have to give the same port in EXPOSE. then we can do port mapping when we do docker run
- USER - specifies which user will be running the process
- ENV - we set environmet variables
- WORKDIR - we will set active working directory. whe we execute a command, by default, the command will be executed under this folder
- ARG - spefies a variable which the user can pass during the build time.
- ONDUILD instruction is usefull to use this image as an base image when you building some other images.

Layers?


Docker registries
- cloud based - dockerhub, google container registry, amazon ECR
- local registries - nexus3+ , jfrog artifactory

Docker commnds:
docker pull, run/stop, images, ps/ps -a, execute, log/inspect, rm/rmi

****************************************************************************

what's docker logs and docker inspect?
docker logs - show logs of the container
docker pull - download images from registry, docker hub,
docker run -> enrty point -> script then command from cmd,
docker run -d, runs the container in background, detached mode,
docker logs is used in troubleshooting purposes, it is process start, process output. 
the logs is basically the information that is generated by the process, we run the process it generates some output. it is logs of the process.
when smth goes wrong, we can figure out the issue with the help of docker logs command.
for examle, docker run -d -P mysql -> in logs indicates error becouse of missing mysql root password information

docker inspect - shows the image information , this an metadate of the image in json format, when it created, expoded port information, environmet variables, entrypoint/cmd commands,
volume information -where it mapped

what is volume?

containers generally known for its volotile nature, thats becouse they they are disposibal, when we removes the container, all the data aslo will be gone with it.
statefull containers like mysql that needs DB, that stores Databases, read from databases, if you happen to replace these containers all the data wil be gone. 
we need to store data out of the containers, so for that we have container volumes 
docker has 2 options for containers to store files in the host machine.
1) Docker volumes. it will create directory in volumes and will attach it to container directory, so all the data will go to this volumes which is in host machine, will saved in host machine. the volumes are saved under var/lib/docker.volumes directory. Example mysql container, basically used to save data out of the container. 
The use of the volumes in most cases to preserve data ou of the container - in our host machine.
2) Bind directories (mounts). Like sync folder, can take any directory in host and mount it to container directory. this is mostly used, When you want to make changes in container data, you can do it from host machine directory and it will be reflected to container directory. 
example, web application files

Volumes and bind mount almost similar, just volumes are directly managed by the docker and volume data will be located under var/lib/docker/volumes directory

usi haptede fininish docker telling and may labs

what is CMD?
cmd is tthe place where we give the command which starts the container process.
CMD ["echo", "hello"] echo - command, hello - argument
Etrypoint is alose used to start the container, but it uses command or script files to start the container, 
entry poit has more priority than CMD
if both of them is used in docker file, give command to entry point , as argument can use from CMD

what is docker-compose?
it is utility/tool that can run multiple containers together, make one example

what is namespece?
- is the mechanizm/feature that which can isolate the resources per the processes or per group of processes
- resources as users, hard drive, hostnames, network, multiple processes there, these type of things we are going to isolate
- isolation of resources 
- namespace can isolate resources

what is cgroup (control group)?
- can limit resource like CPU, Memory, network, Hard disks 
- cgroup can limit per process
- limitation of resources
- cgroup can limit the resources

- not allow from simple user account via ssh
- restrict commands, user creation or deletion
- auto log off of a particuler amount of time





